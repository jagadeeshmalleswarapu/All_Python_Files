
vid_put_args = reqparse.RequestParser()
vid_put_args.add_argument("name", type=str, help="Name of the video")
vid_put_args.add_argument("views", type=int, help="Views of the video")
vid_put_args.add_argument("likes", type=int, help="Likes of the video")

videos = {}

def abrt_if_vid_id_not_found(video_id):
    if video_id not in videos:
        abort(404, message='Video id is not valid...')

def abrt_vid_exists(video_id):
    if video_id in videos:
        abort(409,message="Video is already exists in the DB")

class Video(Resource):
    def get(self, video_id):
        abrt_if_vid_id_not_found(video_id)
        return videos[video_id], 200


    def put(self, video_id):
        # print(request.form)
        abrt_vid_exists(video_id)
        args = vid_put_args.parse_args()

        videos[video_id] = args
        return videos[video_id], 201
        # return {video_id: args}
    def delete(self,video_id):
        abrt_if_vid_id_not_found(video_id)
        del videos[video_id]
        valuee = "Video deleted"
        return valuee, 204



class VideoAll(Resource):
    def get(self):
        return videos;

api.add_resource(Video, '/video/<int:video_id>')
api.add_resource(VideoAll, '/video/all')

if __name__ == '__main__':
    app.run(host="localhost",port=5001, debug=True)